name: Flutter Build (All Targets)

on:
  workflow_dispatch:
    inputs:
      upload_to_release:
        description: "Attach artifacts to GitHub Release page?"
        required: true
        default: "false"
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  release:
    types: [published]

jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Set build version
        id: vars
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=dev-build-${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
          fi

      - run: flutter pub get
      - run: flutter build apk --release
      - run: mv build/app/outputs/flutter-apk/app-release.apk build/counter-${{ steps.vars.outputs.version }}-android.apk

      - uses: actions/upload-artifact@v4
        with:
          name: counter-${{ steps.vars.outputs.version }}-android
          path: build/counter-${{ steps.vars.outputs.version }}-android.apk

      - name: Upload APK to GitHub Release
        if: github.event_name == 'release' || github.event.inputs.upload_to_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: build/counter-${{ steps.vars.outputs.version }}-android.apk

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Set build version
        id: vars
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=dev-build-${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
          fi

      - run: flutter pub get
      - run: flutter config --enable-windows-desktop
      - run: flutter build windows --release

      - name: Create Windows ZIP
        run: powershell Compress-Archive -Path build/windows/runner/Release/* -DestinationPath build/counter-${{ steps.vars.outputs.version }}-windows.zip

      - uses: actions/upload-artifact@v4
        with:
          name: counter-${{ steps.vars.outputs.version }}-windows
          path: build/counter-${{ steps.vars.outputs.version }}-windows.zip

      - name: Upload Windows ZIP to GitHub Release
        if: github.event_name == 'release' || github.event.inputs.upload_to_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: build/counter-${{ steps.vars.outputs.version }}-windows.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: sudo apt-get update && sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Set build version
        id: vars
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=dev-build-${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
          fi

      - run: flutter pub get
      - run: flutter config --enable-linux-desktop
      - run: flutter build linux --release

      - name: Create Linux ZIP
        run: |
          cd build/linux/x64/release/bundle
          zip -r ../../../../counter-${{ steps.vars.outputs.version }}-linux.zip .

      - uses: actions/upload-artifact@v4
        with:
          name: counter-${{ steps.vars.outputs.version }}-linux
          path: build/counter-${{ steps.vars.outputs.version }}-linux.zip

      - name: Upload Linux ZIP to GitHub Release
        if: github.event_name == 'release' || github.event.inputs.upload_to_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: build/counter-${{ steps.vars.outputs.version }}-linux.zip

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Set build version
        id: vars
        shell: bash
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=dev-build-${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
          fi

      - run: flutter pub get
      - run: flutter config --enable-macos-desktop
      - run: flutter build macos --release

      - name: Create macOS ZIP
        run: |
          cd build/macos/Build/Products/Release
          zip -r ../../../../../counter-${{ steps.vars.outputs.version }}-macos.zip *

      - uses: actions/upload-artifact@v4
        with:
          name: counter-${{ steps.vars.outputs.version }}-macos
          path: build/counter-${{ steps.vars.outputs.version }}-macos.zip

      - name: Upload macOS ZIP to GitHub Release
        if: github.event_name == 'release' || github.event.inputs.upload_to_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: build/counter-${{ steps.vars.outputs.version }}-macos.zip

  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Set build version
        id: vars
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=dev-build-${GITHUB_RUN_NUMBER}" >> $GITHUB_OUTPUT
          fi

      - run: flutter pub get
      - run: flutter config --enable-web
      - run: flutter build web --release

      - name: Create Web ZIP
        run: |
          cd build/web
          zip -r ../counter-${{ steps.vars.outputs.version }}-web.zip .

      - uses: actions/upload-artifact@v4
        with:
          name: counter-${{ steps.vars.outputs.version }}-web
          path: build/counter-${{ steps.vars.outputs.version }}-web.zip

      - name: Upload Web ZIP to GitHub Release
        if: github.event_name == 'release' || github.event.inputs.upload_to_release == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: build/counter-${{ steps.vars.outputs.version }}-web.zip

  summarize:
    runs-on: ubuntu-latest
    steps:
      - name: Summarize artifacts
        run: |
          echo "## âœ… Build Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "- Android APK: counter-*.apk" >> $GITHUB_STEP_SUMMARY
          echo "- Windows ZIP: counter-*-windows.zip" >> $GITHUB_STEP_SUMMARY
          echo "- Linux ZIP: counter-*-linux.zip" >> $GITHUB_STEP_SUMMARY
          echo "- macOS ZIP: counter-*-macos.zip" >> $GITHUB_STEP_SUMMARY
          echo "- Web ZIP: counter-*-web.zip" >> $GITHUB_STEP_SUMMARY
